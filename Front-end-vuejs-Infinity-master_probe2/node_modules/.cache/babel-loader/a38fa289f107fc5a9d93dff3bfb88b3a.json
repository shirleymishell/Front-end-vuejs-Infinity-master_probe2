{"remainingRequest":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\src\\views\\SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\src\\views\\SignUp.vue","mtime":1562489199764},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"C:\\\\Users\\\\PC\\\\3D Objects\\\\Front-end-vuejs-Infinity-master\\\\Front-end-vuejs-Infinity-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"mutation ($input: SignUpInput! ) {\\n                signUp (input : $input) {\\n                    token\\n                }\\n            }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport gql from 'graphql-tag';\nimport { onRegister } from \"../vue-apollo\";\nexport default {\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      user: ''\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      this.$apollo.mutate({\n        // Query\n        mutation: gql(_templateObject()),\n        // Parameters\n        variables: {\n          input: {\n            user: this.user,\n            email: this.email,\n            password: this.password\n          }\n        }\n      }).then(function (data) {\n        // Result\n        console.log(data); //onRegister(this.$apollo.provider.defaultClient, data.data.register.token)\n\n        _this.$router.push('./Index.vue');\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,GAAA,MAAA,aAAA;AACA,SAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,OAAA,CAAA,MAAA,CAAA;AACA;AACA,QAAA,QAAA,EAAA,GAAA,mBAFA;AAOA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,KAAA,IADA;AAEA,YAAA,KAAA,EAAA,KAAA,KAFA;AAGA,YAAA,QAAA,EAAA,KAAA;AAHA;AADA;AARA,OAAA,EAeA,IAfA,CAeA,UAAA,IAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAFA,CAGA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA,OApBA,EAoBA,KApBA,CAoBA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AAEA,OAvBA;AAwBA;AA1BA;AARA,CAAA","sourcesContent":["<template> \n\n    <div class=\"container\">\n      <br>\n    \n      <br>\n      \n        <img alt=\"Vue logo\" src=\"../assets/registro.png\">\n        <form action=\"\" method=\"POST\" @submit.prevent=\"register\">\n\n            <h2 id=\"nombre2\">Registrate</h2>\n            <br>\n            <div class=\"form-group\" id=\"casilla2\">\n                <input class=\"form-control\" type=\"user\" v-model=\"user\" name=\"user\" id=\"user\" placeholder=\"Username\" required>\n            </div>\n\n            <div class=\"form-group\" id=\"casilla2\">\n                <input class=\"form-control\" type=\"email\" v-model=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required>\n            </div>\n            <div class=\"form-group\" id=\"casilla2\">\n                <input class=\"form-control\" type=\"password\" v-model=\"password\"  name=\"password\" id=\"password\" placeholder=\"Password\" required>\n            </div>\n\n      <br><br> \n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-success\" id=\"boton2\">Registro </button>\n\n            </div>\n        </form>\n \n    </div> \n</template>\n\n<script >\nimport gql from  'graphql-tag'\nimport { onRegister} from '../vue-apollo'\n\nexport default {\n    data () {\n        return {\n            email : '',\n            password : '',\n            user : ''\n        }\n    },\n    methods: {\n        register() {\n            this.$apollo.mutate({\n            // Query\n            mutation: gql`mutation ($input: SignUpInput! ) {\n                signUp (input : $input) {\n                    token\n                }\n            }`,\n            // Parameters\n            variables: {\n                input : {\n                    user: this.user,\n                    email : this.email,\n                    password : this.password\n                }  \n            },\n            }).then((data) => {\n            // Result\n            console.log(data)\n            //onRegister(this.$apollo.provider.defaultClient, data.data.register.token)\n            this.$router.push('./Index.vue')\n            }).catch((error) => {\n            console.error(error)\n            \n            })\n        },\n},\n\n}\n</script>\n\n<style>\n#nombre2 {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n   text-shadow: 3px 2px white;\n }\n\n#boton2 {\n   \n  background-color: #1ee11e;  \n  border: none;\n  color: white;\n  hight: 40px;\n  width: 151px; \n  margin: 10px 12px;\n  cursor: pointer;\n\n }  \n\n#casilla2 {\n display: inline-block;\n    text-align: left;\n    width: 55%;\n    vertical-align: bottom; \n } \n \n input:invalid {\n  border: 2px solid red;\n} \n\n  input:valid {\n  border: 2px solid green;\n}\n\n#titulo{\n    color:#bb0dbb;\n    font-family:courier;\n\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}