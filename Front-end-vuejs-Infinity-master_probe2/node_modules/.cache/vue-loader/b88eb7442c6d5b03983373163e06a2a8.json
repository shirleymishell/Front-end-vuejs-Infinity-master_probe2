{"remainingRequest":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\src\\views\\SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\src\\views\\SignUp.vue","mtime":1562455039881},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\3D Objects\\Front-end-vuejs-Infinity-master\\Front-end-vuejs-Infinity-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport gql from  'graphql-tag'\nimport { onRegister} from '../vue-apollo'\n\nexport default {\n    data () {\n        return {\n            email : '',\n            password : '',\n            user : ''\n        }\n    },\n    methods: {\n        register() {\n            this.$apollo.mutate({\n            // Query\n            mutation: gql`mutation ($input: SignUpInput! ) {\n                signUp (input : $input) {\n                    token\n                }\n            }`,\n            // Parameters\n            variables: {\n                input : {\n                    user: this.user,\n                    email : this.email,\n                    password : this.password\n                }  \n            },\n            }).then((data) => {\n            // Result\n            console.log(data)\n            //onRegister(this.$apollo.provider.defaultClient, data.data.register.token)\n            this.$router.push('./Index.vue')\n            }).catch((error) => {\n            console.error(error)\n            \n            })\n        },\n},\n\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"SignUp.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <br>\n        <img alt=\"Vue logo\" src=\"../assets/registro.png\">\n        <form action=\"\" method=\"POST\" @submit.prevent=\"register\">\n\n            <br><br>\n            <h2>Registrate</h2>\n            <br>\n            <div class=\"form-group\">\n                <input class=\"form-control\" type=\"user\" v-model=\"user\" name=\"user\" id=\"user\" placeholder=\"Username\">\n            </div>\n\n            <div class=\"form-group\">\n                <input class=\"form-control\" type=\"email\" v-model=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\">\n            </div>\n            <div class=\"form-group\">\n                <input class=\"form-control\" type=\"password\" v-model=\"password\"  name=\"password\" id=\"password\" placeholder=\"Password\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-success\">Registro </button>\n            </div>\n        </form>\n\n    </div> \n</template>\n\n<script>\nimport gql from  'graphql-tag'\nimport { onRegister} from '../vue-apollo'\n\nexport default {\n    data () {\n        return {\n            email : '',\n            password : '',\n            user : ''\n        }\n    },\n    methods: {\n        register() {\n            this.$apollo.mutate({\n            // Query\n            mutation: gql`mutation ($input: SignUpInput! ) {\n                signUp (input : $input) {\n                    token\n                }\n            }`,\n            // Parameters\n            variables: {\n                input : {\n                    user: this.user,\n                    email : this.email,\n                    password : this.password\n                }  \n            },\n            }).then((data) => {\n            // Result\n            console.log(data)\n            //onRegister(this.$apollo.provider.defaultClient, data.data.register.token)\n            this.$router.push('./Index.vue')\n            }).catch((error) => {\n            console.error(error)\n            \n            })\n        },\n},\n\n}\n</script>\n"]}]}